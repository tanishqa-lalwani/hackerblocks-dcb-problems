#include <bits/stdc++.h>
using namespace std;

class Node {
    public:
    int data;
    Node* left;
    Node* right;
   

    Node(int d) {
        data = d;
        left = right = NULL;
    }
};


void find(Node* root,vector<int> &ans) {
    if(root == NULL)
    return;


    find(root->left,ans);
    ans.push_back(root->data);
    find(root->right,ans);
}
Node* buildTree() {
    int d;
    cin>>d;

    if(d == -1) return NULL;
    Node* root = new Node(d);
    root->left = buildTree();
    root->right = buildTree();
    return root;
}


int main() {
    /* code here */
    
    Node* root = NULL;
    root = buildTree();

    vector<int> ans;
    find(root,ans);

    int first = -1,last = -1,index;
    for(int i=1 ; i< ans.size() ; i++) {
        if(ans[i] < ans[i-1] && first == -1 ) {
        first = ans[i-1];
        index = i;
        }

        else if(ans[i] < ans[i-1]) {
            last = ans[i];
        }
    }

    if(last == -1)
    last = ans[index];

    if(first < last)
    cout << first << " " << last ;
    else
    cout << last << " " << first;

   
    return 0;
}
